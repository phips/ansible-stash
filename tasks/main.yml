---
# tasks file for stash
# vim: set ft=ansible ts=2 sw=2:

- name: Check for OS support
  fail: msg="OS is not supported"
  when: ansible_os_family != 'RedHat'

- name: Ensure group exists
  group: name={{ stash_user }} state=present

- name: Ensure user exists
  user: name={{ stash_user }} group={{ stash_user }} state=present

- name: Ensure required packages are installed
  yum:
    name: "{{ item }}"
  with_items: stash_packages

- name: Fetch installer
  get_url:
    url={{ stash_baseurl }}/{{ stash_installer }}
    dest={{ stash_tmp }}/{{ stash_installer }}
  register: fetch
  tags: install

- name: Extract installation
  shell: tar xvf {{ stash_tmp }}/{{ stash_installer }} -C {{ stash_installto }} --transform='s#\(atlassian\)-#\1/#'
  when: fetch.changed
  tags: install

- name: Ensure consistent file ownership
  file: path={{ stash_installto }}/atlassian/stash-{{ stash_version }} recurse=true
        owner={{ stash_user }} group={{ stash_user }}

- name: Ensure stash home direcotry exists
  file: path={{ stash_home }} state=directory
        owner={{ stash_user }} group={{ stash_user }}

- name: Set home dir in environment config script
  lineinfile:
    dest={{ stash_installto }}/atlassian/stash-{{ stash_version }}/bin/setenv.sh
    regexp="STASH_HOME=.*$"
    line="export STASH_HOME={{ stash_home }}"
    state=present
  tags: install

- name: Ensure logs symlink exists
  file: src={{ stash_installto }}/atlassian/stash-{{ stash_version }}/logs
        path=/var/log/stash
        state=link
  tags: install

- name: Ensure service definition exists
  template: src=service.init.j2 dest=/etc/init.d/stash
            owner=root group=root mode=0755
  tags: install

# login_user not specified, uses the module default. RTFM.
- name: Ensure database user exists
  postgresql_user:
    name: "{{ stash_dbuser }}"
    password: "{{ stash_dbpass }}"
    state: present
  sudo: yes
  sudo_user: postgres

# login_user not specified, uses the module default. RTFM.
- name: Ensure database exists
  postgresql_db:
    name: "{{ stash_dbname }}"
    owner: "{{ stash_dbuser }}"
    state: present
  sudo: yes
  sudo_user: postgres

- name: Ensure service is set to run
  service:
    name: stash
    state: started
    enabled: yes

